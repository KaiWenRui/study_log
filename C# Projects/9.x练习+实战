//                                      ///函数，递归///
//#include "stdio.h"
//void up_and_down(int);
//int main()
//{
//    up_and_down(1);
//    return 0;
//}
// void up_and_down(int n)
// {
//     printf("Level %d:n location %p\n",n,&n);
//     if(n<4)
//         up_and_down(n+1);
//     printf("LEVEL %d:n location %p\n",n,&n);
// }


                            ///尾递归///
//#include "stdio.h"
//long fact(int n);
//long rfact(int n);
//int main()
//{
//    int num;
//
//    printf("This problem calculate factorials\n");
//    printf("Enter a value in the rang 0-12(q to quit);\n");
//    while (scanf("%d",&num)==1)
//    {
//        if(num<0)
//        {
//            printf("No negative numbers,please\n");
//        }
//        else if(num>12)
//        {
//            printf("Keep input under 13.\n");
//        }
//        else
//        {
//            printf("Loop:%d factorial =%ld\n",num,fact(num));
//            printf("recursion:%d factorial = %ld\n",num, rfact(num));
//        }
//        printf("Enter a value in the range 0-12(q to quit):\n");
//    }
//    printf("Bye .\n");
//    return 0;
//}
//long fact(int n)
//{
//    long ans;
//
//    for (ans=1;n>1;n--)
//    {
//        ans *=n;
//    }
//    return ans;
//
//}
//long rfact(int n)
//{
//    long ans;
//    if(n>0)
//        ans =n * rfact(n-1);
//    else
//        ans=1;
//    return ans;
//
//
//}


//                                    ///递归和倒序计算///
//#include "stdio.h"
//void to_binary(unsigned long n);
//int main(){
//    unsigned long number;
//    printf("Enter an integer(q to quit)\n");
//    while(scanf("%lu",&number)==1)
//    {
//        printf("Binary eqivalent:");
//        to_binary(number);
//        putchar('\n');
//        printf("Enter an integer (q to quit)\n");
//    }
//}
//void to_binary(unsigned long n)
//{
//    int r;
//    r = n%2;
//    if(n>=2)
//        to_binary(n/2);
//    putchar(r==0?'0':'1');
//
//
//}


//                                        ///指针///
//#include "stdio.h"
//int main()
//{
//    int pooh = 24;
//    printf("pooh值:%d  pooh内存地址:%p",pooh,&pooh);
//    return 0;
//}
/*指针持续输出*/
//#include "stdio.h"
//int main()
//{
//    char *ch;
//    int i=0,j;
//    ch = "Ascii";
//    while(*(ch+i)!='\0')
//    {
//        i++;
//    }
//    for(j=0;j<i;j++)
//        printf("%c\n",*(ch+j));
//
//}
//9.10.7
//#include "stdio.h"
//void salami(int num);
//int main()
//{
//    int x;
//    scanf("%d",&x);
//    salami(x);
//}
//void salami(int num)
//{
//    int num;     //重新定义，不可行
//
//}


//9.11.4 倒数的平均值
//#include "stdio.h"
//float result(float a,float b);
//int main()
//{
//    float x;
//    x =result(3,2);
//    printf("%f",x);
//}
//float result(float a,float b)
//{
//    double c,d,sum,avg;
//    c = 1.0/a;
//    d = 1.0/b;
//    sum = c+d;
//    avg = sum/2;
//    return avg;
//
//}

//9.11.6以地址判大小
//#include "stdio.h"
//double result(const double *a,const double *b,const double *c);
//int main()
//{
//    double a=2.0,b=3.0,c=4.0;
//    result(&a,&b,&c);
//}
//double result(const double *a,const double *b,const double *c)
//{
//    double d,e,f,g;
//    d = *a,e = *b,f = *c;
//    if(d>e&&e>f)
//        printf("%lf %lf %lf",d,e,f);
//    if(d>f&&f>e)
//        printf("%lf %lf %lf",d,f,e);
//    if(e>d&&d>f)
//        printf("%lf %lf %lf",e,d,f);
//    if(e>f&&f>d)
//        printf("%lf %lf %lf",e,f,d);
//    if(f>e&&e>d)
//        printf("%lf %lf %lf",f,e,d);
//    if(f>d&&d>e)
//        printf("%lf %lf %lf",f,d,e);
//}


//9.11.7判断字符是否是字母并输出位置
//#include "stdio.h"
//#include "ctype.h"
//int result (char *str);
//int main()
//{
//    char *ch;
//    result(&ch);
//}
//int result (char *str)
//{
//    char ch;
//    int n=0;
//    while((ch = getchar())!='\0')
//    {
//        if(isalpha(ch))
//        {
//            printf("%c %d\n",ch,n);
//        }
//        n++;
//    }
//}


//9.11.8计算次方数，可正负
//#include "stdio.h"
//double power(double a,double b);
//int main()
//{
//    double a,b,x;
//    scanf("%lf %lf",&a,&b);
//    x = power(a,b);
//    printf("%lf",x);
//    return 0;
//}
//double power(double a,double b)
//{
//    double c=1,d,e,f;
//    int i,j;
//    if(a==1)
//        return 1;
//    else if(a==0)
//        return 0;
//    else
//        if(b<0)
//        {
//            b=-b;
//            for(i=0;i<b;i++)
//            {
//                c *=a;
//            }
//            d = 1/c;
//        }
//        else if(b>0)
//        {
//            for(j=0;j<b;j++)
//            {
//                c *=a;
//            }
//            d = c;
//
//        }
//    return d;
//
//}
